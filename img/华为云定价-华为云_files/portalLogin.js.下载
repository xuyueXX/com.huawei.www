if (!window.gConfig) {
  window.gConfig = {}
}
window.gConfig.isApp = /galaxy/i.test(navigator.userAgent) && window.galaxy;
// 初始化全局变量
var jsonParamInit = {}
var jsonParamView = {}
var jsonParamEvent = {}
jsonParamInit['UserAccount'] = 'host'
jsonParamEvent['rec_account'] = getUaCookie('ua')
jsonParamView['rec_account'] = getUaCookie('ua')
var portalDomain = 'https://portal.huaweicloud.com',
  ssoDomain = 'https://auth.huaweicloud.com'
var isVerified = false
var isLogin = false

function showMenu(data) {
  data = data || []
  var isVendor = data.isVendor || false
  var isIsv = data.isIsv || false
  var $_target = $('.user-info-layer ul.account-nav')
  if (isVendor) {
    $_target.find('li').hide()
    $_target.find('.isVendor,.logout').show()
  }
  else if (isIsv) {
    $_target.find('.isIsv').show()
    $_target.find('.isVendor').show()
  }
}

function removeTicket(uri) {
  var index = uri.indexOf('?')
  if (index === -1) {
    return uri
  }
  var path = uri.substring(0, index), q = uri.substring(index + 1) || ''
  q = q.replace(/ticket=[^&]*&?/, '').replace(/locale=[^&]*&?/, '')
  if (q) {
    return path + '?' + q
  }
  return path
}

function getUaCookie(c_name) {
  if (document.cookie.length > 0) {
    var c_start = document.cookie.indexOf(c_name + '=')
    if (c_start != -1) {
      c_start = c_start + c_name.length + 1
      var c_end = document.cookie.indexOf(';', c_start)
      if (c_end == -1) c_end = document.cookie.length
      return decodeURI(document.cookie.substring(c_start, c_end))
    }
  }
  return ''
}

function portalLoginCallback(data) {
  if (data.flag == 1) {
    var username = data.username
    isLogin = true
    jsonParamInit['UserAccount'] = data.userId
    jsonParamEvent['rec_account'] = data.userId
    jsonParamView['rec_account'] = data.userId
    jsonParamInit['xdomain_type'] = data.xdomain_type

    window.changeBtnAfterLogin && window.changeBtnAfterLogin()

    var image_url = data.image_url
    if (image_url && image_url.small) {
      getAvatarCallback(image_url)
    } else {
      getAvatar()
    }
    if (data.xdomain_type != 'HWC_HK') {
      getMessage(data.domainId)
      getOrder()
      isGrayuser()
      getUserverified()
    }

    $('#header').addClass('logined')
    $('.user-info').find('.my-acct').text(username)
    $('.user-info').find('.my-acct').attr('title', username)
    showMenu(data)

    if (window.serviceCode) {
      if (typeof window.serviceCode === 'function') {
        window.serviceCode(data)
      }
    }

    // get user site info and show tips when user is HWC_HK
    if (data.xdomain_type == 'HWC_HK') {
      window.prompts && window.prompts(true, window.reg, window.promptLan, window.refLan, window.promptTips, true)
      window.menuPrompts && window.menuPrompts(true, window.reg, window.promptLan, window.refLan, window.promptTips, true)
    }

    window.dataLayer.push({
      'event': 'loginSuccess',
      'accountType': { 'isIsv': data.isIsv, 'isVendor': data.isVendor }
    })
  }
  if (window.observer) {
    observer('login').publish(null, data)
  }
}

function getAvatarCallback(data) {
  var image_url = data
  if (image_url && image_url.small) {
    $('.account-pic').attr('src', image_url.small)
  }
}
function getMessage(domain_id) {
  var url = portalDomain + '/api/mc/user/mc/v1/' + domain_id + '/messages/envelope/unread'
  $.ajax({
    dataType: 'json',
    timeout: 10000,
    type: 'get',
    url: url,
    xhrFields: {
      withCredentials: true
    },
    success: function (data) {
      if (data.total > 0) {
        $('.user-info').addClass('msg')
        if (data.total < 10) {
          $('.user-info').addClass('msg1')
          $('.message span').text(data.total)
        } else if (data.total < 100) {
          $('.user-info').addClass('msg2')
          $('.message span').text(data.total)
        } else {
          $('.user-info').addClass('msg3')
          $('.message span').text('99+')
        }
      }
    },
    error: function (data) { }
  })
}

function getOrder() {
  var url = 'https://portal.huaweicloud.com/user/getbillinginfo'
  $.ajax({
    dataType: 'json',
    timeout: 10000,
    type: 'get',
    url: url,
    xhrFields: {
      withCredentials: true
    },
    success: function (data) {
      if (data.data.toPendingOrderCount == 0 || data.data.toPendingOrderCount == -1) {
        $('.user-info').addClass('ord1')
        $('.order span').hide()
      }
      if (data.data.toPendingRenewalCount == 0 || data.data.toPendingRenewalCount == -1) {
        $('.user-info').addClass('mag1')
        $('.management span').hide()
      }
      if (data.data.toPendingOrderCount > 0) {
        if (data.data.toPendingOrderCount < 10) {
          $('.user-info').addClass('ord1')
          $('.order span').text(data.data.toPendingOrderCount)
        } else if (data.data.toPendingOrderCount < 100) {
          $('.user-info').addClass('ord2')
          $('.order span').text(data.data.toPendingOrderCount)
        } else {
          $('.user-info').addClass('ord3')
          $('.order span').text('99+')
        }
      }
      if (data.data.toPendingRenewalCount > 0) {
        if (data.data.toPendingRenewalCount < 10) {
          $('.user-info').addClass('mag1')
          $('.management span').text(data.data.toPendingRenewalCount)
        } else if (data.data.toPendingRenewalCount < 100) {
          $('.user-info').addClass('mag2')
          $('.management span').text(data.data.toPendingRenewalCount)
        } else {
          $('.user-info').addClass('mag3')
          $('.management span').text('99+')
        }
      }
    },
    error: function (data) { }
  })
}
function getAvatar() {
  var get_account_pic = portalDomain + '/user/avatar?callback=getAvatarCallback'
  getScript(window, document, 'script', get_account_pic, function () { })
}

function isGrayuser() {
  var is_gray_user = portalDomain + '/index/isgrayuser'
  getScript(window, document, 'script', is_gray_user, function () { })
}

function $parseQueryString(name) {
  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')
  var r = window.location.search.substr(1).match(reg)
  if (r != null) {
    return unescape(r[2])
  } else {
    return null
  }
}
function resetFromacct() {
  var href = encodeURIComponent(removeTicket(window.location.href))
  var channelFromValue = window.channelfrom || window.channelFrom
  var channelfrom = channelFromValue ? ('&channelFrom=' + $.base64.btoa(channelFromValue)) : ''

  if ($parseQueryString('fromacct') || $parseQueryString('fromuser')) {
    var fromacct = $parseQueryString('fromacct') || $parseQueryString('fromuser')
    var fromflag = $parseQueryString('fromacct') ? 'fromacct' : 'fromuser'
    var tmpEle = $('<div></div>')
    tmpEle.text(fromacct)
    fromacct = tmpEle.html()
    var registerHref =
      '//reg.huaweicloud.com/registerui/public/custom/register.html?locale=zh-cn&' + fromflag + '=' + fromacct + '&service=' + href + channelfrom + '#/register'
    $('.header-register>a').attr('href', registerHref)
  } else {
    var registerHref = '//reg.huaweicloud.com/registerui/public/custom/register.html?locale=zh-cn&service=' + href + channelfrom + '#/register'
    $('.header-register>a').attr('href', registerHref)
  }

  if ($parseQueryString('fromacct') || $parseQueryString('fromuser')) {
    $(document).on('mouseenter', 'a', function (e) {
      var fromacct = $parseQueryString('fromacct') || $parseQueryString('fromuser')
      var fromflag = $parseQueryString('fromacct') ? 'fromacct' : 'fromuser'
      var tmpEle = $('<div></div>')
      tmpEle.text(fromacct)
      fromacct = tmpEle.html()
      var $this = $(this)
      var href = $this.attr('href')
      if (href && (href.indexOf('//') == 0 || href.indexOf('http') == 0) && href.indexOf(fromflag) == -1) {
        var targetHref = (href.indexOf('.html?') != -1 || href.indexOf('/?') != -1) ? (href + '&' + fromflag + '=' + fromacct) : (href + '?' + fromflag + '=' + fromacct)
        $this.attr('href', targetHref)
      }
    })
  }
}
function getScript(win, doc, tag, src, always) {
  var script = doc.createElement(tag),
    h = doc.getElementsByTagName(tag)[0]
  script.async = 1
  script.src = src

  if (script.addEventListener) {
    script.addEventListener('load', always, false)
  } else if (script.attachEvent) {
    script.attachEvent('onreadystatechange', function () {
      var target = window.event.srcElement
      if (target.readyState == 'loaded' || target.readyState == 'complete') {
        always.call(target)
      }
    })
  }
  h.parentNode.insertBefore(script, h)
}
function portalLogin(serviceUrl, locale, callback) {
  callback ? callback() : null
  if (window.LinkTo) {
    var linkTo = LinkTo.default && LinkTo.default.getInstance({ env: 'dev', protocol: 'https' })
    linkTo && linkTo.login({
      service: serviceUrl,
      locale: locale
    })
  }
}
function portalRegister(serviceUrl, locale, callback) {
  callback ? callback() : null
  if (window.LinkTo) {
    var linkTo = LinkTo.default && LinkTo.default.getInstance({ env: 'dev', protocol: 'https' })
    linkTo && linkTo.register({
      service: serviceUrl,
      locale: locale
    })
  }
}
function portalrealNameAuthing(serviceUrl, locale, callback) {
  callback ? callback() : null
  if (window.LinkTo) {
    var linkTo = LinkTo.default && LinkTo.default.getInstance({ env: 'dev', protocol: 'https' })
    linkTo && linkTo.realNameAuthing({
      service: serviceUrl,
      locale: locale
    })
  }
}
function upDateState() {
  if (window.gConfig.isApp && window.Login) {
    var config = { service: encodeURIComponent(window.location.href), env: 'prod' } // 是否使用m域
    var loginInstance = window.Login && window.Login.default ? window.Login.default.getInstance(config) : window.Login.getInstance(config)
    loginInstance.isLogin().then(function (data) {
      window.isLogin = data.isLogin
      if (data.domainId) {
        jsonParamInit['UserAccount'] = data.domainId
      }
    })
    loginInstance.isVerify().then(function (res) {
      window.isVerified = res.isVerify
    })
  }
}

if (!window.gConfig.isApp) {
  if (window.observer) {
    observer('login', true)
  }
  function loginCallback(data) {
    portalLoginCallback(data)
  }
  jQuery(function () {
    var href = encodeURIComponent(removeTicket(window.location.href))
    $('[data-login-href]').each(function () {
      $(this).attr('href', $(this).data('login-href') + href)
    })

    resetFromacct()

    window.raw_onerror = window.onerror
    window.onerror = function (errorMsg, url, lineNumber) {
      return true
    }

    var check_login_url = portalDomain + '/index/islogin?callback=loginCallback'
    getScript(window, document, 'script', check_login_url, function () {
      if (window.observer) {
        if (!isLogin) {
          observer('login').publish(null, { flag: 0 })
        }

        if (window.dataLayer) {
          var pageviewObj = {
            'userId': window.jsonParamInit.UserAccount,
            'loginStatus': window.jsonParamInit.UserAccount == 'host' ? 'Guest' : 'Logged-in',
            'userAgent': window.navigator.userAgent,
            'countryCode': $('html').attr('lang'),
            'pageType': window.mate_data_ts_pageType,
            'page': window.location.pathname
          }
          if (window.location.host == 'activity.huaweicloud.com') {
            pageviewObj.activityName = $('title').text()
          }
          window.dataLayer.push(pageviewObj)
        }
      }
      try {
        if (typeof initBi === 'function') {
          initBi(jsonParamInit, jsonParamView, jsonParamEvent)
        }
        if (!window.isLogin) {
          window.promptQueryIP && window.promptQueryIP()
        }
      } catch (e) { }
      window.onerror = window.raw_onerror
    })
  })
  var ua = navigator && navigator.userAgent
  function getUserverified() {
    var url = portalDomain + '/api/bss/userverified?callback=?'
    jQuery.getJSON(url, function (data) {
      if (data) {
        if (data.retCode == '0') {
          if (data.isVerified) {
            isVerified = true
            $('.account-item .account-verification').show().addClass('active')
            $('.phone-acct').find('.account-pic').show()
            $('.account-pic-no-ident').hide()
            $('.true-name-li').hide()
          } else {
            $('.account-item .account-verification').show().removeClass('active')
            if (!data.isShow) {
              if (ua.toLowerCase().indexOf('android') > -1 || (/iPad/i).test(ua) || (/iPhone/i).test(ua)) {
                $('body').removeClass('autShow')
              } else {
                $('body').addClass('autShow')
                over = setInterval(settime, 1000)
              }
            } else {
              $('body').removeClass('autShow')
            }
            $('.phone-acct').find('.account-pic').hide()
            $('.account-pic-no-ident').show()
            $('.true-name-li').show()
          }
        } else {
          $('.phone-acct').find('.account-pic').show()
          $('.account-pic-no-ident').hide()
          $('.true-name-li').hide()
        }
      } else {
        $('.phone-acct').find('.account-pic').show()
        $('.account-pic-no-ident').hide()
        $('.true-name-li').hide()
      }
    })
  }
  time = 10
  function settime() {
    time--
    if (time == 0) {
      clearInterval(over)
      $('body').removeClass('autShow')
    }
  }

  $('.Authentication').on('click', '.close', function (event) {
    $('body').removeClass('autShow')
  })

  function cookieToJson() {
    var cookieArr = document.cookie.split(';')
    var obj = {}
    cookieArr.forEach(function (i) {
      var arr = i.trim().split('=')
      obj[arr[0]] = arr[1]
    })
    return obj
  }
  function isLocalStorageWorks() {
    var test = 'test'
    try {
      localStorage.setItem(test, test)
      localStorage.removeItem(test)
      return true
    } catch (e) {
      return false
    }
  }
  var vk = ''
  if (window.observer) {
    observer('login').subscribe(null, function (data) {
      if (data.flag !== 1) {
        vk = cookieToJson()['vk']
        if (vk) {
          getProfiles()
        } else {
          if (isLocalStorageWorks() === true) {
            vk = localStorage.getItem('vk')
          }
          if (vk) {
            getProfiles()
          } else {
            setTimeout(function () {
              vk = cookieToJson()['vk']
              getProfiles()
            }, 200)
          }
        }
      } else {
        vk = data.userId
        getProfiles()
      }
      var $metaProfileAd = $('body').find('.meta-profilead')
      $metaProfileAd.find('.datafrom-api').addClass('unload')
    })
  }

  function getProfiles() {
    var $metaProfileAd = $('body').find('.meta-profilead')
    if ($metaProfileAd) {
      $metaProfileAd.on('listenProfileEv', function (e, data) {
        switch (data) {
          case -1:
            $(this).addClass('data-result data-default')
            break
          case 0:
            $(this).addClass('data-result data-enterprise-not-use').removeClass('data-default')

            break
          case 1:
            $(this).addClass('data-result data-personal-not-use').removeClass('data-default')

            break
          case 2:
            $(this).addClass('data-result data-not-bought').removeClass('data-default')

            break
          case 3:
            $(this).addClass('data-result data-has-bought').removeClass('data-default')
            break
        }
        $(this).find('.datafrom-api').removeClass('unload')
      })

      $metaProfileAd.each(function () {
        var _This = $(this)
        var $profileid = _This.attr('meta-data-profileid')
        var ajaxTimeout = $.ajax({
          crossDomain: true,
          contentType: 'application/json',
          dataType: 'json',
          type: 'post',
          timeout: 3000,
          url: 'https://portal.huaweicloud.com/bi/global/rest/cbc/cbcbiapiproxyservice/v1/service/execute/api/getUserProfile',
          data: JSON.stringify({ 'filterParam': "{'uniqueId':'" + vk + "','userProfileId':'" + $profileid + "'}" }),
          success: function (msg) {
            if (msg.data) {
              var val = JSON.parse(msg.data).VAL
              if (typeof (val) === 'string') {
                var vkType = val.split('#')[2].split('|').join('').indexOf(1)
                $metaProfileAd.trigger('listenProfileEv', vkType)
              } else {
                $metaProfileAd.trigger('listenProfileEv', -1)
              }
            } else {
              $metaProfileAd.trigger('listenProfileEv', -1)
            }
          },
          error: function () {
            $metaProfileAd.trigger('listenProfileEv', -1)
          },
          complete: function (XMLHttpRequest, status) {
            if (status == 'timeout') {
              ajaxTimeout.abort()
              $metaProfileAd.trigger('listenProfileEv', -1)
            }
          }
        })
      })
    }
  }
} else {
  setTimeout(function () {
    upDateState()
  }, 0)
}
