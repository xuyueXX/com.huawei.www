/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./components/support/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./base/ui/index.less":
/*!****************************!*\
  !*** ./base/ui/index.less ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./components/service/components/tab/tab.less":
/*!****************************************************!*\
  !*** ./components/service/components/tab/tab.less ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./components/support/components/common/flexHeight.js":
/*!************************************************************!*\
  !*** ./components/support/components/common/flexHeight.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// AGrid 设置相同高度
/* 组件：弹性高度盒子
 * 依赖：$.throttle
 =================*/
!function ($) {
    'use strict';

    // FLEX CLASS DEFINITION
    // =====================

    function FlexHeight($items) {
        var that = this;
        this.autoEqual = true;
        this.$items = $items;
        this.equal();
        if ($.throttle) {
            $(window).resize($.throttle(function () {
                that.equal();
            }));
        } else {
            $(window).resize(function () {
                that.equal();
            });
        }
    }

    FlexHeight.prototype.equal = function () {
        if (!this.autoEqual) return;
        var maxHeight = 0;
        this.$items
            .height('')
            .each(function () {
                var height = $(this).height();
                if (maxHeight < height) {
                    maxHeight = height;
                }
            })
            .height(maxHeight);
    };

    FlexHeight.prototype.auto = function (param) {
        if (param === undefined || this.autoEqual == param) {
            return;
        }

        this.autoEqual = !!param;

        if (this.autoEqual) {
            this.equal();
        } else {
            this.$items.height('');
        }

    };

    // FLEX_HEIGHT PLUGIN DEFINITION
    // =============================

    var old = $.fn.flexHeight;

    $.fn.flexHeight = function (option, param) {
        return this.each(function () {
            var $this = $(this);
            var $items;
            var data = $this.data('hw.flexHeight');

            if (!data) {
                if (option && option.items) {
                    $items = $this.find(option.items);
                } else {
                    $items = $this.children('.flex-item');
                }
                $this.data('hw.flexHeight', new FlexHeight($items));
            }

            if (typeof option == 'string') {
                data[option](param);
            }
        });
    };

    $.fn.flexHeight.Constructor = FlexHeight;


    // FLEX_HEIGHT NO CONFLICT
    // =======================

    $.fn.flexHeight.noConflict = function () {
        $.fn.flexHeight = old;
        return this;
    };


    // FLEX_HEIGHT AUTO INIT
    // =====================

    $(document).ready(function () {
        $('[data-toggle="flexHeight"]').flexHeight();
    });

}(jQuery);

$(function(){
    var winWidth =
        window.innerWidth ||
        document.documentElement.clientWidth ||
        document.body.clientWidth;
    if(winWidth > 1023){
        var $header = $('#header');
        var set = function () {
            $header.attr('data-theme', $(window).scrollTop() > 0 ? '' : 'transparent-light');
        };

        $(window).scroll(set);
        set();
    }
});

/***/ }),

/***/ "./components/support/components/cui-pagination/cui-pagination.js":
/*!************************************************************************!*\
  !*** ./components/support/components/cui-pagination/cui-pagination.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* 分页组件插件 */
!function ($, undefined) {
    'use strict';

    var langMap = {
        en: {
            'total': 'total ',
            'items': ' items',
            'goto': 'go to',
            'pages': '',
            'go': 'Go'
        },
        cn: {
            'total': '共',
            'items': '条',
            'goto': '到第',
            'pages': '页',
            'go': '确定'
        }
    }

    // 构造函数定义
    // ===========
    var Pagination = function (selector, options) {
        this.$element = $(selector);
        this.options = {};

        var defaults = {
            lang: 'cn',
            current: 0,
            total: 0,
            items: 0,
            hrefs: []
        };

        for (var key in defaults) {
            if (options[key] === undefined) {
                this.options[key] = defaults[key];
            } else {
                this.options[key] = options[key]
            }
        }

        if (this.options.total === 0) return this;

        this._buildHTML();
        this._addEvent();

    };

    // 构造函数方法
    // ===========

    // 创建HTML结构
    Pagination.prototype._buildHTML = function () {
        var that = this;

        var lang = langMap[that.options.lang],
            current = that.options.current,
            total = that.options.total,
            items = that.options.items,
            hrefs = that.options.hrefs;

        var HTML = '';

        // 移动端gotoHTML
        var HTML_mbGoto = '<li class="pagination-goto-mb"><label><input type="text" class="goto-mb-input" value="' + current + '">/<span>' + total + '</span></label></li>';

        // 左、右工具栏HTML
        var HTML_leftTool = '<span class="pagination-text">' + lang.total + items + lang.items + '</span><a class="pagination-toFirst' + (current === 1 ? ' disabled' : ('" href="' + hrefs[0])) + '"></a>';
        var HTML_rightTool = '<a class="pagination-toLast' + (current === total ? ' disabled' : ('" href="' + hrefs[total - 1])) + '"></a><span class="pagination-text">' + lang.goto + '</span><input type="text" class="pagination-to">' + (that.options.lang === 'cn' ? '<span class="pagination-text">页</span>' : '') + '<input type="submit" class="pagination-submit" value="' + lang.go + '">';

        // 页码列表HTML左、右部分
        var HTML_list_before = (current === 1) ? '<ul class="pagination"><li class="disabled"><a></a></li>' : '<ul class="pagination"><li><a href="' + hrefs[current - 2] + '"></a></li>';
        var HTML_lsist_after = (current === total) ? '<li class="disabled"><a></a></li></ul>' : '<li><a href="' + hrefs[current] + '"></a></li></ul>';

        // 页码列表HTML主要部分
        var buildPageItem = function () {

            var buildStrategy = {
                // 少于8页
                lt: function () {
                    var HTML = '';
                    for (var i = 1; i <= total; i++) {
                        HTML += '<li' + (current === i ? ' class="active"' : '') + '><a' + (current === i ? '' : (' href="' + hrefs[i - 1]) + '"') + '>' + i + '</a></li>'
                    }

                    return HTML;
                },
                // 大于等于8页
                mte: function () {
                    var i = 0,
                        max = 0;

                    var HTML_start = '',
                        HTML_center = '',
                        HTML_end = '';

                    var flag_leftEllipsis = current > 4,
                        flag_rightEllopsis = current < total - 3;

                    if (flag_leftEllipsis) {
                        HTML_start = '<li><a href="' + hrefs[0] + '">1</a></li><li class="ellipsis"><a>...</a></li>'
                    }

                    if (flag_rightEllopsis) {
                        HTML_end = '<li class="ellipsis"><a>...</a></li><li><a href="' + hrefs[total - 1] + '">' + total + '</a></li>'
                    }

                    if (flag_leftEllipsis && flag_rightEllopsis) {
                        i = current - 1;
                        max = current + 1;
                    } else if (flag_leftEllipsis && !flag_rightEllopsis) {
                        i = total - 4;
                        max = total;
                    } else if (!flag_leftEllipsis && flag_rightEllopsis) {
                        i = 1;
                        max = 5;
                    }

                    for (; i <= max; i++) {
                        HTML_center += '<li' + (current === i ? ' class="active"' : '') + '><a' + (current === i ? '' : (' href="' + hrefs[i - 1]) + '"') + '>' + i + '</a></li>'
                    }

                    return HTML_start + HTML_center + HTML_end;
                }
            }

            if (total < 8) {
                return buildStrategy.lt()
            } else {
                return buildStrategy.mte()
            }
        }

        HTML = HTML_leftTool + HTML_list_before + buildPageItem() + HTML_mbGoto + HTML_lsist_after + HTML_rightTool;

        that.$element.html(HTML);
    };

    // 添加事件
    Pagination.prototype._addEvent = function () {
        var that = this;

        this.$element
        // 跳转页码
            .on('submit', function (e) {
                e.preventDefault();

                var pages = parseInt($(this).find('.pagination-to,.goto-mb-input').filter(':visible').val());

                that.goto(pages);
            })
            // 移动端输入框聚焦添加样式
            .on('focus', '.goto-mb-input', function(){
                $(this).closest('.pagination-goto-mb').addClass('on-focus');
            })
            .on('blur', '.goto-mb-input', function(){
                $(this).closest('.pagination-goto-mb').removeClass('on-focus');
            });
    }

    // 页数跳转
    Pagination.prototype.goto = function (pages) {
        pages = parseInt(pages);

        if(isNaN(pages) || pages < 1){
            pages = 1;
        } else if (pages > this.options.total) {
            pages = this.options.total;
        }

        location.href = this.options.hrefs[pages - 1];
    }

    // 插件
    // ====
    $.fn.pagination = function (method, options) {
        return this.each(function () {
            var $this = $(this);
            var plugin = $this.data('hw.pagination');

            if (typeof method == 'object') {
                options = method;
            }

            if (!plugin) {
                $this.data('hw.pagination', (plugin = new Pagination(this, options)));
            }

            if (typeof method == 'string') {
                plugin[method](options);
            }
        });
    }
}(jQuery);



$(function(){
    var getParam = function(key) {
        var serchObj = {};
        location.search.slice(1).split('&').forEach(function(val){
            var key_val = val.split('=');

            serchObj[key_val[0]] = key_val[1];
        });

        return serchObj[key]
    };

    var lang = getParam('lang'),
        current = parseInt(getParam('page')),
        total = parseInt(getParam('total')),
        items = parseInt(getParam('items')),
        hrefs = [];

    for(var i = 1; i <= total; i++) {
        hrefs.push(location.href.replace(/page=[\d]*/,function(val){
            return 'page=' + i
        }));
    }

    $('#pagination').pagination({
        lang: lang,
        current:current,
        total: total,
        items: items,
        hrefs: hrefs
    });
})

/***/ }),

/***/ "./components/support/components/new-banner/newbanner.less":
/*!*****************************************************************!*\
  !*** ./components/support/components/new-banner/newbanner.less ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./components/support/components/product-v6-guide-1/product-v6-guide-1.js":
/*!********************************************************************************!*\
  !*** ./components/support/components/product-v6-guide-1/product-v6-guide-1.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var winWidth =
    window.innerWidth ||
    document.documentElement.clientWidth ||
    document.body.clientWidth;

$(".product-v6-guide-2 .desc").each(function(){
    if($(this).height()>=44){
        $(this).parents(".product-v6-guide-2").find(".desc").height(44);
    }
});
if(winWidth >= 768){
    $(".product-v6-guide-2").each(function(){
        new $.fn.flexHeight.Constructor($(this).find(".guide-item-1-v6"));
    });
}


/***/ }),

/***/ "./components/support/components/support-banner/recommend.js":
/*!*******************************************************************!*\
  !*** ./components/support/components/support-banner/recommend.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// var lang = $('html').attr('lang').toLowerCase();
// var url = $('#recommend_keyword').attr('data-api-hot');
// var i18n = {
//     'zh-cn': {
//         'Trending': '热门搜索：',
//     },
//     'en-us': {
//         'Trending': 'Trending: ',
//     },
// };
// $.ajax({
//     url: url,
//     type: 'GET',
//     data: {
//         position: 'support_hot_search_json',
//         language: lang,
//     },
//     success: function (data) {
//         var innerHTMLContent = '<ul class="search-items"><li>' + i18n[lang]['Trending'] + '</li>';
//         data.forEach(function (element) {
//             innerHTMLContent = innerHTMLContent + '<li><a  href="' + element.link + '/t_30' + '">' + element.title + '</a></li>';
//         });
//         innerHTMLContent = innerHTMLContent + '</ul>';
//         document.getElementById("recommend_keyword").innerHTML = innerHTMLContent;
//     },
//     error: function () {},

// });

/***/ }),

/***/ "./components/support/components/support-banner/search.js":
/*!****************************************************************!*\
  !*** ./components/support/components/support-banner/search.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* 搜索 */
!function () {
    var $searchBox = $('#search-box');
    var $searchInput = $searchBox.find('.searchInput');
    var $searchDroplist = $searchBox.find('.search-droplist');
    var $searchBtn = $searchBox.find('.search-inner');
    var $clear = $searchBox.find('.search-btn-close');
    var i18n = {
        'zh-cn': {
            docEntry: '文档快捷入口',
            searchAll: '搜索全部文档',
            featured: '您可能感兴趣的文档',
        },
        'en-us': {
            docEntry: 'Quickstarts',
            searchAll: 'All',
            featured: 'Featured',
        },
    };
    var lang = $('html').attr('lang').toLowerCase();
    var searchPageUrl = $searchBox.attr('data-api-search-url');
    var suggestApi = $searchBox.attr('data-api-suggest');

    var main = {
        dropListRenderer_toPage: function (pages, pageType) {
            var html = '';

            pages.forEach(function (item, index) {
                var titleHTML = index === 0 ? '<div class="search-droplist-title">' + i18n[lang][pageType] + '</div>' : '';

                html += '<li>' + titleHTML + '<a class="search-droplist-topage" href="' + item.href + '">' + item.text + '</a></li>';
            });

            return html;
        },
        dropListRenderer_toSearch: function (autoWords) {
            var html = '';
            autoWords.forEach(function (item, index) {
                var text = item.text.replace(/</g, '&lt').replace(/>/g, '&gt');
                var titleHTML = index === 0 ? '<div class="search-droplist-title">' + i18n[lang].searchAll + '</div>' : '';
                var href = searchPageUrl + $.base64.urlSafeEncode($.trim(text), true) + '/t_30';

                html += '<li>' + titleHTML + '<a target="_blank" href="' + href + '">' + text + '</a></li>';
            });

            return html;
        },
        toggleDropList: function (isShow, data, docEntry) {
            if (isShow) {
                var html_toPage = this.dropListRenderer_toPage(data.pages, docEntry);
                var html_toSearch = this.dropListRenderer_toSearch(data.autowords);

                if (!html_toPage && !html_toSearch) {
                    $searchDroplist.hide();
                    return;
                }

                $searchDroplist.children('ul').html(html_toPage + html_toSearch);
                $searchDroplist.show();
            } else {
                $searchDroplist.hide();
            }
        },
        requestAutowords: function (words, callback) {
            $.ajax({
                type: 'get',
                url: suggestApi,
                data: {
                    q: words,
                    n: 10,
                    language: lang,
                },
                crossDomain: true,
                xhrFields: {withCredentials: true,},
                dataType: "jsonp",
                async: true,
                timeout: 30000,
                success: function (data) {
                    if (data && data.result) {
                        callback(data.result);
                    } else {
                        callback([]);
                    }

                },
                error: function () {
                    callback([]);
                },
            });
        },
        getPages: function (words) {
            var pages = [];

            var compareWords = words.toLowerCase();

            $('.support-menu-item-li').each(function () {
                var $this = $(this);
                var $a = $this.find('a');
                var text = $.trim($a.text());
                var compareText = text.toLowerCase();
                var keywords = $a.attr('data-keywords') ? $a.attr('data-keywords').replace(',', ' ') : '';
                var compareKeywords = keywords.toLowerCase();
                var href = $a.attr('href');

                if (compareText.indexOf(compareWords) !== -1 || compareKeywords.indexOf(compareWords) !== -1) {
                    pages.push({
                        text: text,
                        href: href,
                    });
                }
            });

            return pages;
        },
        getDropData: function (words, callback) {
            var that = this;
            var data = {};

            that.requestAutowords(words, function (result) {
                data.autowords = result;
                data.pages = that.getPages(words);
                console.log(data);
                callback(data);
            });
        },
        focusDropItemByKeyboard: function (direction) {
            var $dropItem = $searchDroplist.find('li');
            var $currentItem = $dropItem.filter('.active');
            var $targetItem;
            var $prevItem = $currentItem.prev();
            var $nextItem = $currentItem.next();

            if (!$searchDroplist.is(':visible') || $dropItem.length === 0) return;

            if (direction === 'up') {
                $targetItem = $prevItem;
            } else if (direction === 'down') {
                if ($currentItem.length === 0) {
                    $targetItem = $dropItem.eq(0);
                } else if ($nextItem.length === 0) {
                    $targetItem = $currentItem;
                } else {
                    $targetItem = $nextItem;
                }
            } else {
                return;
            }

            var $targetA = $targetItem.find('a');
            $dropItem.removeClass('active');
            $targetItem.addClass('active');

            if ($targetItem.length > 0) {
                $searchBtn.attr('href', $targetA.attr('href')).attr('target', $targetA.attr('target') || '');
            } else {
                $searchBtn.attr('href', searchPageUrl + $.base64.urlSafeEncode($.trim($searchInput.val()), true) + '/t_30').attr('target', '');
            }

            // 滚动条
            var scrollHeight = $searchDroplist.scrollTop();
            var dropHeight = $searchDroplist.innerHeight();
            var targetItemTop = $targetItem.position() ? $targetItem.position().top : 0;
            var targetItemHeight = $targetItem.outerHeight();

            if (targetItemTop < scrollHeight) {
                $searchDroplist.scrollTop(targetItemTop);
            }
            else if (targetItemTop + targetItemHeight > scrollHeight + dropHeight) {
                $searchDroplist.scrollTop(targetItemTop + targetItemHeight - dropHeight);
            }
        },
        saveHistory: function (item) {
            if (!localStorage || !localStorage.setItem) return;

            var localStorageKey = this.getLocalStorageKey();
            var dataString = localStorage.getItem(localStorageKey) || '[]';
            var data = JSON.parse(dataString);
            var itemInData = false;

            data.forEach(function (dataItem) {
                if (item.text === dataItem.text) {
                    itemInData = true;
                }
            });

            if (itemInData) return;

            data.unshift(item);

            while (data.length > 5) {
                data.pop();
            }

            localStorage.setItem(localStorageKey, JSON.stringify(data));
        },
        readHistory: function () {
            if (!localStorage || !localStorage.setItem) return [];

            var localStorageKey = this.getLocalStorageKey();
            var dataString = localStorage.getItem(localStorageKey) || '[]';

            return JSON.parse(dataString);
        },
        getLocalStorageKey: function () {
            var site = location.host.split('.')[0];
            var firstPathName = location.pathname.split('/')[1];

            if(site === 'support' && firstPathName === 'intl') {
                site = 'support-intl';
            }

            return 'supportSearchClickHistory' + '_' + site + '_' + lang;
        },
        addEvents: function () {
            var that = this;

            // 输入过程显示下拉
            $searchInput.on('input click', function (e) {
                var $this = $(this);
                var val = $.trim($this.val());

                if (e.type === 'input'  && val) {
                    that.getDropData(val, function (data) {
                        that.toggleDropList(true, data, 'docEntry');
                    });
                } else if(!val) {
                    that.toggleDropList(true, {
                        pages: that.readHistory(),
                        autowords: [],
                    }, 'featured');
                }
            });

            $searchInput.on('input', function () {
                var $this = $(this);
                var val = $.trim($this.val());

                $clear.toggleClass('show', !!val);

                $searchBtn.attr('href', searchPageUrl + $.base64.urlSafeEncode($.trim($searchInput.val()), true) + '/t_30');
            });

            $clear.on('click', function () {
                $searchInput.val('').focus();
                $clear.removeClass('show');
                that.toggleDropList(false);
                $('.support-banner .search-underline').html('');
            });

            // 点击其他区域收起下拉
            $(document).on('click', function (e) {
                var $target = $(e.target);

                if ($target.closest('.search-box').length === 0) {
                    that.toggleDropList(false);
                }
            });

            $searchBox.on('click', '.search-droplist-topage', function () {
                var $this = $(this);
                var dataItem = {
                    href: $this.attr('href'),
                    text: $this.html(),
                };

                that.saveHistory(dataItem);
            });

            // 下拉菜单键盘控制
            $searchBox.on('keydown', function (e) {
                e.stopPropagation();

                if (e.keyCode === 38 || e.keyCode === 40) {
                    e.preventDefault();
                }

                if (e.keyCode === 38) {
                    that.focusDropItemByKeyboard('up');
                }
                else if (e.keyCode === 40) {
                    that.focusDropItemByKeyboard('down');
                }
            });

            $searchBox.on('keydown', function (e) {
                if (e.keyCode !== 13) return;

                var $a = $(this).find('.search-inner');
                var href = $a.attr('href');
                var target = $a.attr('target');
                var $activeTopage = $searchDroplist.find('li.active .search-droplist-topage');

                if($activeTopage.length > 0) {
                    that.saveHistory({
                        href: $activeTopage.attr('href'),
                        text: $activeTopage.html(),
                    });
                }

                if(target === '_blank') {
                    window.open(href);
                } else {
                    location.href = href;
                }
            });
        },
        start: function () {
            this.addEvents();
        },
    };

    main.start();
}();

/***/ }),

/***/ "./components/support/components/support-banner/support-banner.js":
/*!************************************************************************!*\
  !*** ./components/support/components/support-banner/support-banner.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


$(function(){
    $('.support-banner .searchInput').keyup(function() {
        var realTimeText = $(this).val();
        $(this).parent().find('.search-underline').html(realTimeText);
    });

});

/***/ }),

/***/ "./components/support/components/support-bestpractice-list/support-bestpractice-list.js":
/*!**********************************************************************************************!*\
  !*** ./components/support/components/support-bestpractice-list/support-bestpractice-list.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


$(function(){
    var HH = 100;
    if($('body').hasClass('header-white'))HH = 0;
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if (win_width > 768) {
        navFixed2();
        $(window).scroll($.throttle(navFixed2));
        $(window).resize($.throttle(navFixed2));
        //点击tab效果
        $('.support-bestpractice-list .support-nav li').on('click', function (e) {
            $(this).addClass("active").siblings().removeClass("active");
            var $index = $(this).index();
            if ($index == 0) {
                $(this).closest('.support-body').find(".support-menu .support-menu-li").stop().fadeIn({
                    duration: 300,
                });
                return;
            }
            $index = $index - 1;
            $(this).closest('.support-body').find(".support-menu .support-menu-li").stop().fadeOut(0);
            $(this).closest('.support-body').find(".support-menu .support-menu-li").eq($index).stop().fadeIn({
                duration: 500,
            });
        })
    }
    // nav置顶
    function navFixed2() {
        if(!$('.support-bestpractice-list .v6-container').hasClass('v6-container'))return;
        var scrollTop = $(window).scrollTop();
        var H =  $('.support-bestpractice-list .v6-container').offset().top;
        var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        if (win_width <= 768) {
            $('.support-bestpractice-list .support-body').css("padding-top", '0px');
            return;
        }
        if (scrollTop + HH >= H) {

            $('.support-bestpractice-list .support-nav').addClass('fixed');
            $('.support-bestpractice-list .support-body').css("padding-top", $('.support-bestpractice-list .support-nav').height());
        }
        if (scrollTop + HH < H) {
            $('.support-bestpractice-list .support-nav').removeClass('fixed');
            $('.support-bestpractice-list .support-body').css("padding-top", '0px');
        }
    }
})

/***/ }),

/***/ "./components/support/components/support-index-list/support-index-list.js":
/*!********************************************************************************!*\
  !*** ./components/support/components/support-index-list/support-index-list.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* 工具：函数节流
 ==============*/
!function ($) {
    'use strict';

    $.throttle = function (fn, interval) {
        var __self = fn, // 保存需要被延迟执行的函数引用
            timer, // 定时器
            firstTime = true; // 是否是第一次调用
        interval = interval || 150;
        return function () {
            var args = arguments,
                __me = this;
            if (firstTime) { // 如果是第一次调用，不需延迟执行
                __self.apply(__me, args);
                return firstTime = false;
            }
            if (timer) { // 如果定时器还在，说明前一次延迟执行还没有完成
                return false;
            }
            timer = setTimeout(function () { // 延迟一段时间执行
                clearTimeout(timer);
                timer = null;
                __self.apply(__me, args);
            }, interval);
        };
    };

}(jQuery);
$(function(){
    var HH = 100;
    if($('body').hasClass('header-white'))HH = 0;
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if (win_width > 768) {
        navposition();
        $(window).scroll(navposition);
        navFixed();
        $(window).scroll($.throttle(navFixed));
        $(window).resize($.throttle(navFixed));
    }else {
        $('.support-index-list .support-menu-li').on('click', function () {
            $(this).toggleClass('unfold');
            $(this).find('.support-menu-item').slideToggle();
            // $(this).siblings().find('.support-menu-item').slideUp();
            $('html,body').animate({"scrollTop": $(this).offset().top - 60,}, 500);
        });
    }

    $('.support-nav .fold-btn').on('click', function () {
        var $this = $(this);
        var $nav = $this.closest('.support-nav');
        // var $navul = $this.closest('.support-nav ul');
        var $inner = $nav.children();
        var innerHeight = $inner.outerHeight();

        if ($nav.hasClass('unfold')) {
            $nav.removeClass('unfold');
            $nav.animate({height: 50 + 'px',}, 350);
        } else {
            $nav.addClass('unfold');
            $nav.animate({height: innerHeight + 'px',}, 350);
        }
    });
    if (win_width > 768 && win_width < 1024) {
        $('.support-nav .fold-btn').trigger('click');
        $('.support-nav .fold-btn').trigger('click');
    }


    // nav置顶
    function navFixed() {
        if(!$('.support-index-list .v6-container').hasClass('v6-container'))return;
        var scrollTop = $(window).scrollTop();
        var H =  $('.support-index-list .v6-container').offset().top;
        var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        if (win_width < 768) {
            $('.support-index-list .support-body').css("padding-top", '0px');
            return;
        }
        if (scrollTop + HH >= H) {
            $('.support-index-list .support-nav').addClass('fixed');
            $('.support-index-list .support-body').css("padding-top", $('.support-index-list .support-nav').height());
        }
        if (scrollTop + HH < H) {
            $('.support-index-list .support-nav').removeClass('fixed');
            $('.support-index-list .support-body').css("padding-top", '0px');
        }
    }

    //判断锚点位置
    function navposition() {
        for (var i = $('.support-index-list .support-menu-li').length - 1; i >= 0; i--) {
            var $section = $('.support-index-list .support-menu-li').eq(i);
            var offsetTop = $section.offset().top;
            if ($(window).scrollTop() + HH + 2 + $('#prompt-content').height() + $('.support-index-list .support-nav').height() >= offsetTop) {
                $('.support-index-list .support-nav').find('a[href="#' + $section.attr('id') + '"]').addClass('active').parent().siblings().find('a').removeClass('active');
                break;
            }
        }
        if(!$('.support-index-list .support-nav').hasClass('fixed'))$('.support-index-list a').removeClass('active').eq(0).addClass('active');
    }


    $('body').on('click', 'a[href^="#"]', function (event) {
        var target = $(this).attr("href").substr(1);
        var H =  $('.header-container').height();
        if($('body').hasClass('header-white'))H =0;
        var top = 0;
        if ($("#" + target).length > 0) {
            top = $("#" + target).offset().top - H - ($('.support-nav').height() > 0 ? ($('.support-nav').height()) : 0);
        }
        else if ($("[name='" + target + "']").length > 0) {
            top = $("[name='" + target + "']").offset().top - H - ($('.support-nav').height() > 0 ? ($('.support-nav').height()) : 0);
        }
        event.preventDefault();
        $('body,html').stop().animate({'scrollTop': top,}, 500, 'easeOutSine', function () {
        });
    });
})


/***/ }),

/***/ "./components/support/components/support-novice-component/support-novice-component.js":
/*!********************************************************************************************!*\
  !*** ./components/support/components/support-novice-component/support-novice-component.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


__webpack_require__(/*! ./../common/flexHeight */ "./components/support/components/common/flexHeight.js");
$(function(){
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if (win_width >= 768) {
        $('.support-novice-component').each(function(){

            //固定行卡片头部等高
            new $.fn.flexHeight.Constructor($('.card-zone .row[cols="2"] .card-top, .video-zone .card-top', this));
            new $.fn.flexHeight.Constructor($('.card-zone .row[cols="2"] .card-container', this));

            //活动行卡片头部等高
            new $.fn.flexHeight.Constructor($('.card-box[cols="1:1:1"] .card-top', this));
            new $.fn.flexHeight.Constructor($('.card-box[cols="2:1"] .card-top', this));
            new $.fn.flexHeight.Constructor($('.card-box[cols="1:2"] .card-top', this));

        });
    }
});

/***/ }),

/***/ "./components/support/components/support-novicedocument-list/support-novicedocument-list.js":
/*!**************************************************************************************************!*\
  !*** ./components/support/components/support-novicedocument-list/support-novicedocument-list.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

   $(function(){
    var HH = 100;
    if($('body').hasClass('header-white'))HH = 0;
       var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
       if (win_width > 768) {
           navFixed1();
           $(window).scroll($.throttle(navFixed1));
           $(window).resize($.throttle(navFixed1));
           //点击tab效果
           $('.support-novicedocument-list .support-nav li').on('click', function (e) {
               $(this).addClass("active").siblings().removeClass("active");
               var $index = $(this).index();
               if ($index == 0) {
                   $(this).closest('.support-body').find(".support-menu .support-menu-li").stop().fadeIn({
                       duration: 300,
                   });
                   return;
               }
               $index = $index - 1;
               $(this).closest('.support-body').find(".support-menu .support-menu-li").stop().fadeOut(0);
               $(this).closest('.support-body').find(".support-menu .support-menu-li").eq($index).stop().fadeIn({
                   duration: 500,
               });
           })
       }
        // nav置顶
       function navFixed1() {
           if(!$('.support-novicedocument-list .v6-container').hasClass('v6-container'))return;
           var scrollTop = $(window).scrollTop();
           var H =  $('.support-novicedocument-list .v6-container').offset().top;
           var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
           if (win_width <= 768) {
               $('.support-novicedocument-list .support-body').css("padding-top", '0px');
               return;
           }
           if (scrollTop + HH >= H) {

               $('.support-novicedocument-list .support-nav').addClass('fixed');
               $('.support-novicedocument-list .support-body').css("padding-top", $('.support-novicedocument-list .support-nav').height());
           }
           if (scrollTop + HH < H) {
               $('.support-novicedocument-list .support-nav').removeClass('fixed');
               $('.support-novicedocument-list .support-body').css("padding-top", '0px');
           }
       }
   })





/***/ }),

/***/ "./components/support/components/support-service/support-service.js":
/*!**************************************************************************!*\
  !*** ./components/support/components/support-service/support-service.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


__webpack_require__(/*! ./../common/flexHeight */ "./components/support/components/common/flexHeight.js");
$(function(){
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if (win_width >= 768) {
        $('.support-section-service .AGrid-row').each(function(){
            var $cardItems = $(this).find('.devr-items');
            var group = Math.ceil($cardItems.length/3);
            for(var i=0; i<group; i++) {
                new $.fn.flexHeight.Constructor($cardItems.slice(i*3,i+3));
            }
        });
    }
});

/***/ }),

/***/ "./components/support/components/support-tab-card/support-tab-card.js":
/*!****************************************************************************!*\
  !*** ./components/support/components/support-tab-card/support-tab-card.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


__webpack_require__(/*! ./../common/flexHeight */ "./components/support/components/common/flexHeight.js");
$(function(){
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if (win_width >= 768) {
        $('.support-tab-card').each(function(){
            var $cardItems = $(this).find('.product-tab');
            new $.fn.flexHeight.Constructor($cardItems);
        });
    }
});

/***/ }),

/***/ "./components/support/components/support-video-list/support-video-list.js":
/*!********************************************************************************!*\
  !*** ./components/support/components/support-video-list/support-video-list.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/* 分页组件插件 */
!function ($, undefined) {
    'use strict';

    /* 客户案例index.js自带分页组件 */
    var windowHref=window.location.href;
    if(windowHref.indexOf("/cases.")!=-1){
        return;
    };

    var langMap = {
        en: {
            'total': 'Total ',
            'items': ' items',
            'goto': 'Go to',
            'pages': '',
            'go': 'Go'
        },
        cn: {
            'total': '共',
            'items': '条',
            'goto': '到第',
            'pages': '页',
            'go': '确定'
        }
    };

    // 构造函数定义
    // ===========
    var Pagination = function (selector, options) {
        this.$element = $(selector);
        this.options = {};

        var defaults = {
            lang: 'cn',
            current: 0,
            total: 0,
            items: 0,
            hrefs: []
        };

        for (var key in defaults) {
            if (options[key] === undefined) {
                this.options[key] = defaults[key];
            } else {
                this.options[key] = options[key]
            }
        }

        if (this.options.total === 0) return this;

        this._buildHTML();
        this._addEvent();

    };

    // 构造函数方法
    // ===========

    // 创建HTML结构
    Pagination.prototype._buildHTML = function () {
        var that = this;

        var lang = langMap[that.options.lang],
            current = that.options.current,
            total = that.options.total,
            items = that.options.items,
            hrefs = that.options.hrefs;

        var HTML = '';

        // 移动端gotoHTML
        var HTML_mbGoto = '<li class="pagination-goto-mb"><label><input type="text" class="goto-mb-input" value="' + current + '">/<span>' + total + '</span></label></li>';

        // 左、右工具栏HTML
        var HTML_leftTool = '<span class="pagination-text">' + lang.total + items + lang.items + '</span><a class="pagination-toFirst' + (current === 1 ? ' disabled' : ('" href="' + hrefs[0])) + '"></a>';
        var HTML_rightTool = '<a class="pagination-toLast' + (current === total ? ' disabled' : ('" href="' + hrefs[total - 1])) + '"></a><span class="pagination-text">' + lang.goto + '</span><input type="text" class="pagination-to">' + (that.options.lang === 'cn' ? '<span class="pagination-text">页</span>' : '') + '<input type="submit" class="pagination-submit" value="' + lang.go + '">';

        // 页码列表HTML左、右部分
        var HTML_list_before = (current === 1) ? '<ul class="pagination"><li class="disabled"><a></a></li>' : '<ul class="pagination"><li><a href="' + hrefs[current - 2] + '"></a></li>';
        var HTML_lsist_after = (current === total) ? '<li class="disabled"><a></a></li></ul>' : '<li><a href="' + hrefs[current] + '"></a></li></ul>';

        // 页码列表HTML主要部分
        var buildPageItem = function () {

            var buildStrategy = {
                // 少于8页
                lt: function () {
                    var HTML = '';
                    for (var i = 1; i <= total; i++) {
                        HTML += '<li' + (current === i ? ' class="active"' : '') + '><a' + (current === i ? '' : (' href="' + hrefs[i - 1]) + '"') + '>' + i + '</a></li>'
                    }

                    return HTML;
                },
                // 大于等于8页
                mte: function () {
                    var i = 0,
                        max = 0;

                    var HTML_start = '',
                        HTML_center = '',
                        HTML_end = '';

                    var flag_leftEllipsis = current > 4,
                        flag_rightEllopsis = current < total - 3;

                    if (flag_leftEllipsis) {
                        HTML_start = '<li><a href="' + hrefs[0] + '">1</a></li><li class="ellipsis"><a>...</a></li>'
                    }

                    if (flag_rightEllopsis) {
                        HTML_end = '<li class="ellipsis"><a>...</a></li><li><a href="' + hrefs[total - 1] + '">' + total + '</a></li>'
                    }

                    if (flag_leftEllipsis && flag_rightEllopsis) {
                        i = current - 1;
                        max = current + 1;
                    } else if (flag_leftEllipsis && !flag_rightEllopsis) {
                        i = total - 4;
                        max = total;
                    } else if (!flag_leftEllipsis && flag_rightEllopsis) {
                        i = 1;
                        max = 5;
                    }

                    for (; i <= max; i++) {
                        HTML_center += '<li' + (current === i ? ' class="active"' : '') + '><a' + (current === i ? '' : (' href="' + hrefs[i - 1]) + '"') + '>' + i + '</a></li>'
                    }

                    return HTML_start + HTML_center + HTML_end;
                }
            }

            if (total < 8) {
                return buildStrategy.lt()
            } else {
                return buildStrategy.mte()
            }
        }

        HTML = HTML_leftTool + HTML_list_before + buildPageItem() + HTML_mbGoto + HTML_lsist_after + HTML_rightTool;

        that.$element.html(HTML);
    };

    // 添加事件
    Pagination.prototype._addEvent = function () {
        var that = this;

        this.$element
        // 跳转页码
            .on('submit', function (e) {
                e.preventDefault();

                var pages = parseInt($(this).find('.pagination-to,.goto-mb-input').filter(':visible').val());

                that.goto(pages);
            })
            // 移动端输入框聚焦添加样式
            .on('focus', '.goto-mb-input', function () {
                $(this).closest('.pagination-goto-mb').addClass('on-focus');
            })
            .on('blur', '.goto-mb-input', function () {
                $(this).closest('.pagination-goto-mb').removeClass('on-focus');
            });
    }

    // 页数跳转
    Pagination.prototype.goto = function (pages) {
        pages = parseInt(pages);

        if (isNaN(pages) || pages < 1) {
            pages = 1;
        } else if (pages > this.options.total) {
            pages = this.options.total;
        }

        location.href = this.options.hrefs[pages - 1];
    }

    // 插件
    // ====
    $.fn.pagination = function (method, options) {
        return this.each(function () {
            var $this = $(this);
            var plugin = $this.data('hw.pagination');

            if (typeof method == 'object') {
                options = method;
            }

            if (!plugin) {
                $this.data('hw.pagination', (plugin = new Pagination(this, options)));
            }

            if (typeof method == 'string') {
                plugin[method](options);
            }
        });
    }
}(jQuery);

window.changeLang = function (lang) {
    function setCookie(name, value, expiredays) {
        var exdate, cookieString;
        exdate = new Date();
        exdate.setDate(exdate.getDate() + expiredays);
        cookieString = name + "=" + escape(value) + ((expiredays === null) ? "" : ";expires=" + exdate.toGMTString()) + ";path=/;" + "domain=.huaweicloud.com;";
        document.cookie = cookieString;
    }
    var index = "https://www.huaweicloud.com/en-us/";
    var zh = "zh-cn";
    var en = "en-us";
    var href = window.location.href;
    var host = window.location.protocol + "//" + window.location.hostname;
    var pathname = window.location.pathname;
    var hash = window.location.hash

    var url = "";
    if (lang == en) {
        if (pathname.indexOf(zh) === 1) {
            url = href.replace(zh, en);
        } else {
            url = host + "/" + en + pathname + hash;
        }
    } else {
        if (pathname.indexOf(en) === 1) {
            url = href.replace("/" + en, "");
        } else {
            url = index;
        }
    }
    setCookie('locale', lang, 30);
    if (url) {
        $.ajax({
            url: url,
            type: "get",
            success: function () {
                window.location.href = url;
            },
            error: function (data) {
                window.location.href = index;
            }
        });
    } else {
        window.location.href = index;
    }
}


    // video toggleslideDown
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if(win_width>768) {
        $('.support-video-list ul')
            .on("click",".foldIcon", function () {
                var that = $(this).closest('.flexBox');
                that.toggleClass('slideDown unfold');
                if (that.hasClass('slideDown')) {
                    that.css('height', that.find('ul').height());
                } else {
                    that.css('height', "49px");
                }
            })
            .on("click","li", function () {
                $(this).addClass('active').siblings().removeClass('active');
                $('.support-video-list .flexBox').removeClass('slideDown unfold').css('height', "49px");
                if($('.second-floor').height() == "49")$('.second-floor').find('.foldIcon').fadeOut(0);
            })
    }else {
        $('.support-video-list ul')
            .on("click","li",function(){
                $(this).addClass('active').siblings().removeClass('active');
            })
    }


    if (win_width <= 768) {
        var videoMbIndex = 0;
        $('.support-video-list .support-nav-mb span')
            .on("click", function () {
                $(this).addClass('video-nav-active-mb').siblings().removeClass('video-nav-active-mb');
                videoMbIndex = $(this).index();
                $('.support-video-list .support-nav ul').removeClass('video-show-mb').eq(videoMbIndex).addClass('video-show-mb');

            })
    }

    // var videoList = [
    //     {
    //         key: "storage1",
    //         value: "存储1",
    //         productList: [
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},{key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //
    //         ]
    //     },
    //     {
    //         key: "storage2",
    //         value: "存储2",
    //         productList: [
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //             {key: "csbs", value: "云服务器备份 CSBS2"},
    //             {key: "evs", value: "云硬盘 EVS2"},
    //
    //         ]
    //     }
    // ]
    //
    //
    // var videoNav = "<li class=\'active\'><a  data-value=\'all\'>全部</a></li>";
    // var videoNavEn = "<li class=\'active\'><a  data-value=\'all\'>ALL</a></li>";
    // var str = '';
    // var tag = '';
    // var method = {
    //     //生成菜单
    //     makeMenu: function (obj, lan, tag) {
    //         str = "";
    //         if (lan == "zh") {
    //             str = videoNav;
    //         } else {
    //             str = videoNavEn;
    //         }
    //         ;
    //         if (tag == "") {
    //             for (var i = 0; i < obj.length; i++) {
    //                 str += "<li ><a data-value=\'" + obj[i].key + "\'>" + obj[i].value + " </a></li>"
    //             }
    //         } else if (tag == "all") {
    //             for (var i = 0; i < obj.length; i++) {
    //                 for (var j = 0; j < obj[i].productList.length; j++) {
    //                     str += "<li ><a data-value=\'" + obj[i].productList[j].key + "\'>" + obj[i].productList[j].value + " </a></li>"
    //                 }
    //             }
    //         } else {
    //             for (var i = 0; i < obj.length; i++) {
    //                 console.log(obj[i].key)
    //                 if (obj[i].key == tag) {
    //                     for (var j = 0; j < obj[i].productList.length; j++) {
    //                         str += "<li ><a data-value=\'" + obj[i].productList[j].key + "\'>" + obj[i].productList[j].value + " </a></li>"
    //                     }
    //                 }
    //             }
    //         }
    //         str += "<i class=\"foldIcon\"> </i>";
    //         return str;
    //     },
    //     makeList: function (obj,ele) {
    //         str = "";
    //         for (var i = 0; i < obj.data.length; i++) {
    //                 str += "<li class=\"support-menu-item-li-one\" data-vedio-pc-url=\""+ obj.data[i].videoLink+"\" style=\"background:url(/etc/clientlibs/cloudbu-site/clientlib-support-v6/images/support-占位图.jpg) center no-repeat;background-size:100% 100%; \">\n    <div class=\"title-one\"> </div>\n    <div class=\"title-two video-duration\"></div>\n    <a class=\"product-play-btn\" bi_name=\"视频播放\">\n        <i class=\"video-play-btn\"></i>\n    </a>\n</li>"
    //         }
    //        ele.html(str)
    //     },
    //     firstMenu: function (ele, obj, lan, tag) {
    //         ele.html(this.makeMenu(obj, lan, tag));
    //     },
    //     secondMenu: function (ele, obj, lan, tag) {
    //         ele.html(this.makeMenu(obj, lan, tag));
    //     },
    //     clickMenu: function (ele) {
    //         var that = this;
    //         ele.on("click", function () {
    //             tag = $(this).find('a').data("value");
    //             that.secondMenu($('.support-video-list .second-floor'), videoList, 'zh', tag)
    //         })
    //     },
    //
    // }
    // method.firstMenu($('.support-video-list .first-floor'), videoList, 'zh', "")
    // method.secondMenu($('.support-video-list .second-floor'), videoList, 'zh', "all")
    // method.clickMenu($('.support-video-list .first-floor li'), videoList, 'zh', "all")
$(function(){
    var HH = 100;
    if($('body').hasClass('header-white'))HH = 0;
    var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    if (win_width > 768) {
        navFixed3();
        $(window).scroll($.throttle(navFixed3));
        $(window).resize($.throttle(navFixed3));
    }
    $('.support-video-list .first-floor .foldIcon').trigger('click');
    // nav置顶
    function navFixed3() {
        if(!$('.support-video-list .v6-container').hasClass('v6-container'))return;
        var scrollTop = $(window).scrollTop();
        var H =  $('.support-video-list .v6-container').offset().top;
        var win_width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        if (win_width < 768) {
            $('.support-video-list .support-body').css("padding-top", '0px');
            return;
        }
        if (scrollTop + HH >= H) {

            $('.support-video-list .support-nav').addClass('fixed');
            $('.support-video-list .support-body').css("padding-top", $('.support-video-list .support-nav').height());
        }
        if (scrollTop + HH < H) {
            $('.support-video-list .support-nav').removeClass('fixed');
            $('.support-video-list .support-body').css("padding-top", '0px');
        }
    }
})

/***/ }),

/***/ "./components/support/components/support_convenient_tool/support_convenient_tool.js":
/*!******************************************************************************************!*\
  !*** ./components/support/components/support_convenient_tool/support_convenient_tool.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

$.fn.setToolCardHeight=function(el,rowNum){
    $(this).each(function(){
        var heightArr=[];
        var itemNum=$(this).find(el).size();
        for(var i=0; i< itemNum; i++){
            var heightArrIndex1=parseInt(i/rowNum);
            if(heightArr[heightArrIndex1]){
                if(heightArr[heightArrIndex1]<$(this).find(el).eq(i).outerHeight()){
                    heightArr[heightArrIndex1]=$(this).find(el).eq(i).outerHeight();
                }
            }
            else{
                heightArr[heightArrIndex1]=$(this).find(el).eq(i).outerHeight();
            }
        }
        for(var j=0; j< itemNum; j++){
            var heightArrIndex2=parseInt(j/rowNum);
            $(this).find(el).eq(j).outerHeight(heightArr[heightArrIndex2]);
        }
    });
};



var winWidth =
    window.innerWidth ||
    document.documentElement.clientWidth ||
    document.body.clientWidth;

function setConveiToolHeight(){
    if(winWidth >= 768){
        $(".v6-section.support_tool_1 .product-v6-tabs").each(function(){
            var $dataCols=$(this).attr("data-cols");
            if($(this).parents(".tab-content-list-item").length >0 ){
                if($(this).parents(".tab-content-list-item").css("display")=="block"){
                    // $(this).setCardHeight('.product-tab',$dataCols);
                    return true;
                }
            }
            if($(this).parents(".tab-content-list-item").length ==0){
                $(this).setCardHeight('.product-tab',$dataCols);
            }
        });
    }
}
/*setConveiToolHeight();*/

function computeLineHeight(){
    $(".v6-section.support_tool_1").each(function(){
       $(this).find(".product-tab").each(function(){
           $(this).find(".option-contain").each(function(){
               var lineNum = Math.round($(this).height()/parseFloat($(this).css("line-height")));
               var currentSunWidth = $(this).outerWidth();
               var sunWidth = 0;
               if(lineNum>=2){
                   $(this).children("li").each(function(e){
                       sunWidth += $(this).outerWidth();
                       if(sunWidth>=(currentSunWidth)){
                           $(this).prev().addClass("no-vertical-line");
                           sunWidth = $(this).outerWidth();
                       }
                   });
               }
           });
       });
    });
}
/*computeLineHeight();*/


$(function(){
    var winWidth =
        window.innerWidth ||
        document.documentElement.clientWidth ||
        document.body.clientWidth;

    /*tab head start*/
    function listScroll(){

        $('.support_tool_1 .ui-tab-container .scroll-list').each(function(){
            var _this=$(this);
            if (winWidth <= 768) {
                if(_this.parents(".tab-transverse-type")){return true;}
            }
            var _W=_this.closest('.scroll-list-wrapper').width();
            var _w=-16;
            _this.find('li').each(function(){
                _w+=$(this).innerWidth()+16;
            });
            _this.width(_w);

            if(_W<_w){
                _this.closest('.scroll-list-wrapper').siblings('.u-icon-right').fadeIn();
            }
            else {
                _this.closest('.scroll-list-wrapper').siblings('.u-icon').fadeOut();
            }
        });
    }
    /*tab head end*/

    $(".support_tool_1 .ui-tab-container").each(function(){
        var _this_tool = $(this);
        _this_tool.find('.tab-title-list>li').click(function(){
            var thisIndex=$(this).index();
            $(this).addClass('active').siblings().removeClass('active');
            _this_tool.find('.tab-content-list-item').eq(thisIndex).show().siblings().hide();
            var $dataCols=_this_tool.find('.tab-content-list-item').eq(thisIndex).find('.product-v6-tabs').attr("data-cols");
            console.log(_this_tool.parents().parents().parents(".support_tool_1").length);
            // if(_this_tool.parents().parents().parents(".support_tool_1").length>0){
            //     $(_this_tool.find('.tab-content-list-item').eq(thisIndex).find('.product-v6-tabs')).setCardHeight('.product-tab',$dataCols);
            // }else{
            //     $(_this_tool.find('.tab-content-list-item').eq(thisIndex).find('.product-v6-tabs')).setCardHeight('li',$dataCols);
            // }
        });

        //左右滚动
        $(this).find(".tab-title-list-head .u-icon").click(function(){
            var _this=$(this);
            var _thisBtn=_this.hasClass('u-icon-left')?'left':'right';
            var listWrapperWidth=$(this).siblings('.scroll-list-wrapper').outerWidth();
            var list=$(this).siblings('.scroll-list-wrapper').find('.scroll-list');
            var left=list.position().left;
            var right=listWrapperWidth-list.outerWidth()-left;

            var _liW = list.find('li').length;
            var thisIndex=list.find('li.active').index();

            if(_thisBtn==='left'){
                if(thisIndex==1){ _this.fadeOut();}
                _this.siblings(".u-icon-right").fadeIn();

                if(left<=0){
                    if(left >= -16-list.find('li.active').outerWidth()){
                        left -= left;
                    } else {
                        left += 16 + list.find('li.active').outerWidth();
                    }
                    list.animate({'left':left,});
                }
                if(list.find('li.active').index()!==0){
                    list.find('li.active').removeClass('active').prev().addClass('active');
                }
            }
            else {
                if(_liW==(thisIndex+2)){_this.fadeOut();}
                _this.siblings(".u-icon-left").fadeIn();

                if(right<=0){
                    if(right >= -16-list.find('li.active').outerWidth()){
                        left += right;
                    } else {
                        left -= 16 + list.find('li.active').outerWidth();
                    }
                    list.animate({'left':left,});
                }
                if(list.find('li.active').index()+1!==list.find('li').size()){
                    list.find('li.active').removeClass('active').next().addClass('active');
                }
            }
        });

    });

    listScroll();
    $(window).resize(listScroll);

    $(".support_tool_1 .ui-tab-container").each(function(){
        var _this_tool = $(this);
        _this_tool.find('.tab-mb-type-title').click(function(){
            $(this).toggleClass('active').next().slideToggle();
        });

        if(winWidth<768){
            if($(this).parents(".v6-section-body").hasClass("tab-transverse-type")){
                var _UWidth = -16;
                $(this).find(".tab-title-list").children("li").each(function(){
                    _UWidth = $(this).innerWidth()+16;
                });
                if(_UWidth<winWidth){
                    $(this).find(".u-icon-right").fadeIn();
                }

                $(this).find(".tab-title-list").scroll(function(){
                    var _UWidth = -16,_liWisth = 0;
                    var _windWidth = $(this).width();

                    $($(this).find("li")).each(function(){
                        _liWisth = $(this).innerWidth()+16;
                        _UWidth += _liWisth;
                    });

                    var left_offset = $(this).children(":first").offset().left;

                    if(left_offset<0){
                        $(this).parents(".scroll-list-wrapper").siblings(".u-icon-left").fadeIn();
                    }
                    var  _oc= parseInt((Math.abs(left_offset)))+parseInt(_windWidth);
                    if(_oc<_UWidth){
                        $(this).parents(".scroll-list-wrapper").siblings(".u-icon-right").fadeIn();
                    }

                    if(left_offset==0){
                        $(this).parents(".scroll-list-wrapper").siblings(".u-icon-left").fadeOut();
                    }

                    if(_oc==_UWidth){
                        $(this).parents(".scroll-list-wrapper").siblings(".u-icon-right").fadeOut();
                    }
                });

            }
        }


    });


});


/***/ }),

/***/ "./components/support/index.less":
/*!***************************************!*\
  !*** ./components/support/index.less ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./components/support/main.js":
/*!************************************!*\
  !*** ./components/support/main.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./../../base/ui/index.less */ "./base/ui/index.less")

__webpack_require__(/*! ./index.less */ "./components/support/index.less")
__webpack_require__(/*! ./components/support-banner/support-banner */ "./components/support/components/support-banner/support-banner.js");
__webpack_require__(/*! ./components/new-banner/newbanner.less */ "./components/support/components/new-banner/newbanner.less");
__webpack_require__(/*! ./components/support-banner/search */ "./components/support/components/support-banner/search.js");
__webpack_require__(/*! ./components/support-banner/recommend */ "./components/support/components/support-banner/recommend.js");
__webpack_require__(/*! ./components/support-tab-card/support-tab-card */ "./components/support/components/support-tab-card/support-tab-card.js");
__webpack_require__(/*! ./components/support-novice-component/support-novice-component */ "./components/support/components/support-novice-component/support-novice-component.js");
__webpack_require__(/*! ./components/support-index-list/support-index-list */ "./components/support/components/support-index-list/support-index-list.js");
__webpack_require__(/*! ./components/support-bestpractice-list/support-bestpractice-list */ "./components/support/components/support-bestpractice-list/support-bestpractice-list.js");
__webpack_require__(/*! ./components/support-novicedocument-list/support-novicedocument-list */ "./components/support/components/support-novicedocument-list/support-novicedocument-list.js");
__webpack_require__(/*! ./components/support-service/support-service */ "./components/support/components/support-service/support-service.js");
__webpack_require__(/*! ./components/support-video-list/support-video-list */ "./components/support/components/support-video-list/support-video-list.js");
__webpack_require__(/*! ./../service/components/tab/tab.less */ "./components/service/components/tab/tab.less");
__webpack_require__(/*! ./components/support_convenient_tool/support_convenient_tool.js */ "./components/support/components/support_convenient_tool/support_convenient_tool.js");
__webpack_require__(/*! ./components/product-v6-guide-1/product-v6-guide-1.js */ "./components/support/components/product-v6-guide-1/product-v6-guide-1.js");

 __webpack_require__(/*! ./components/cui-pagination/cui-pagination */ "./components/support/components/cui-pagination/cui-pagination.js");


/***/ })

/******/ });
//# sourceMappingURL=index.min.js.map